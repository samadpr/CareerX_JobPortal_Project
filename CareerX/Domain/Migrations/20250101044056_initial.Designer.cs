// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(CareerxDbContext))]
    [Migration("20250101044056_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AuthUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthUsers");
                });

            modelBuilder.Entity("Domain.Models.CompanyAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LegalName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("Location")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__CompanyA__3214EC0745D4C12C");

                    b.HasIndex("IndustryId");

                    b.HasIndex("Location");

                    b.ToTable("CompanyAdmin", (string)null);
                });

            modelBuilder.Entity("Domain.Models.HiringManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__HiringMa__3214EC0718E6366B");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "Email" }, "UQ__HiringMa__A9D10534F09AB67E")
                        .IsUnique();

                    b.ToTable("HiringManager", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Industry__3214EC072DDCCCC8");

                    b.ToTable("Industry", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Interview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("Interviewee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ScheduledBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Intervie__3214EC07F5413196");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Interviewee");

                    b.HasIndex("JobId");

                    b.HasIndex("ScheduledBy");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("Domain.Models.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Applicant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("JobPostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__JobAppli__3214EC0777659508");

                    b.HasIndex("Applicant");

                    b.HasIndex("JobPostId");

                    b.HasIndex("ResumeId");

                    b.ToTable("JobApplication", (string)null);
                });

            modelBuilder.Entity("Domain.Models.JobCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__JobCateg__3214EC07783007E5");

                    b.ToTable("JobCategory", (string)null);
                });

            modelBuilder.Entity("Domain.Models.JobPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PostedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PostedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__JobPosts__3214EC072487B189");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PostedBy");

                    b.HasIndex("QualificationId");

                    b.HasIndex("SkillId");

                    b.ToTable("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.JobSeeker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__JobSeeke__3214EC07478DBF8D");

                    b.HasIndex(new[] { "Email" }, "UQ__JobSeeke__A9D10534039B4590")
                        .IsUnique();

                    b.ToTable("JobSeeker", (string)null);
                });

            modelBuilder.Entity("Domain.Models.JobSeekerProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("JobSeekerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfileSummary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__JobSeeke__3214EC070C013632");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerProfile", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Location__3214EC07432A7873");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Qualific__3214EC0779AAB97E");

                    b.ToTable("Qualification", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Resume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("DateUploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("JobSeekerProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ResumeFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id")
                        .HasName("PK__Resume__3214EC0748B6B243");

                    b.HasIndex("JobSeekerProfileId");

                    b.ToTable("Resume", (string)null);
                });

            modelBuilder.Entity("Domain.Models.SavedJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("DateSaved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("Job")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SavedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__SavedJob__3214EC073D2C3B15");

                    b.HasIndex("Job");

                    b.HasIndex("SavedBy");

                    b.ToTable("SavedJobs");
                });

            modelBuilder.Entity("Domain.Models.SignUpRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__SignUpRe__3214EC0700B92B55");

                    b.ToTable("SignUpRequests");
                });

            modelBuilder.Entity("Domain.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Skill__3214EC079F28E3DD");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("JobSeekerProfileSkill", b =>
                {
                    b.Property<Guid>("JobSeekerProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobSeekerProfileId", "SkillId")
                        .HasName("PK__JobSeeke__C66959E4A3925978");

                    b.HasIndex("SkillId");

                    b.ToTable("JobSeekerProfileSkill", (string)null);
                });

            modelBuilder.Entity("Domain.Models.CompanyAdmin", b =>
                {
                    b.HasOne("Domain.Models.Industry", "Industry")
                        .WithMany("CompanyAdmins")
                        .HasForeignKey("IndustryId")
                        .HasConstraintName("FK_CompanyAdmin_Industry");

                    b.HasOne("Domain.Models.Location", "LocationNavigation")
                        .WithMany("CompanyAdmins")
                        .HasForeignKey("Location")
                        .HasConstraintName("FK_CompanyAdmin_Location");

                    b.Navigation("Industry");

                    b.Navigation("LocationNavigation");
                });

            modelBuilder.Entity("Domain.Models.HiringManager", b =>
                {
                    b.HasOne("Domain.Models.CompanyAdmin", "Company")
                        .WithMany("HiringManagers")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_HiringManager_CompanyAdmin");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Models.Interview", b =>
                {
                    b.HasOne("Domain.Models.JobApplication", "Application")
                        .WithMany("Interviews")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__Interview__Appli__07C12930");

                    b.HasOne("Domain.Models.CompanyAdmin", "Company")
                        .WithMany("Interviews")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK__Interview__Compa__09A971A2");

                    b.HasOne("Domain.Models.JobSeeker", "IntervieweeNavigation")
                        .WithMany("Interviews")
                        .HasForeignKey("Interviewee")
                        .HasConstraintName("FK__Interview__Inter__06CD04F7");

                    b.HasOne("Domain.Models.JobPost", "Job")
                        .WithMany("Interviews")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__Interview__JobId__05D8E0BE");

                    b.HasOne("Domain.Models.HiringManager", "ScheduledByNavigation")
                        .WithMany("Interviews")
                        .HasForeignKey("ScheduledBy")
                        .HasConstraintName("FK__Interview__Sched__08B54D69");

                    b.Navigation("Application");

                    b.Navigation("Company");

                    b.Navigation("IntervieweeNavigation");

                    b.Navigation("Job");

                    b.Navigation("ScheduledByNavigation");
                });

            modelBuilder.Entity("Domain.Models.JobApplication", b =>
                {
                    b.HasOne("Domain.Models.JobSeeker", "ApplicantNavigation")
                        .WithMany("JobApplications")
                        .HasForeignKey("Applicant")
                        .IsRequired()
                        .HasConstraintName("FK_JobApplication_Applicant");

                    b.HasOne("Domain.Models.JobPost", "JobPost")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobPostId")
                        .IsRequired()
                        .HasConstraintName("FK_JobApplication_JobPost");

                    b.HasOne("Domain.Models.Resume", "Resume")
                        .WithMany("JobApplications")
                        .HasForeignKey("ResumeId")
                        .IsRequired()
                        .HasConstraintName("FK_JobApplication_Resume");

                    b.Navigation("ApplicantNavigation");

                    b.Navigation("JobPost");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("Domain.Models.JobPost", b =>
                {
                    b.HasOne("Domain.Models.JobCategory", "Category")
                        .WithMany("JobPosts")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_JobPosts_Category");

                    b.HasOne("Domain.Models.CompanyAdmin", "Company")
                        .WithMany("JobPosts")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_JobPosts_Company");

                    b.HasOne("Domain.Models.Industry", "Industry")
                        .WithMany("JobPosts")
                        .HasForeignKey("IndustryId")
                        .HasConstraintName("FK_JobPosts_Industry");

                    b.HasOne("Domain.Models.Location", "Location")
                        .WithMany("JobPosts")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_JobPosts_Location");

                    b.HasOne("Domain.Models.HiringManager", "PostedByNavigation")
                        .WithMany("JobPosts")
                        .HasForeignKey("PostedBy")
                        .HasConstraintName("FK_JobPosts_PostedBy");

                    b.HasOne("Domain.Models.Qualification", "Qualification")
                        .WithMany("JobPosts")
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("FK_JobPosts_Qualification");

                    b.HasOne("Domain.Models.Skill", "Skill")
                        .WithMany("JobPosts")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_JobPosts_Skill");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Industry");

                    b.Navigation("Location");

                    b.Navigation("PostedByNavigation");

                    b.Navigation("Qualification");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Domain.Models.JobSeekerProfile", b =>
                {
                    b.HasOne("Domain.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerProfiles")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfile_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("Domain.Models.Resume", b =>
                {
                    b.HasOne("Domain.Models.JobSeekerProfile", "JobSeekerProfile")
                        .WithMany("Resumes")
                        .HasForeignKey("JobSeekerProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_Resume_JobSeekerProfile");

                    b.Navigation("JobSeekerProfile");
                });

            modelBuilder.Entity("Domain.Models.SavedJob", b =>
                {
                    b.HasOne("Domain.Models.JobPost", "JobNavigation")
                        .WithMany("SavedJobs")
                        .HasForeignKey("Job")
                        .IsRequired()
                        .HasConstraintName("FK_SavedJobs_Job");

                    b.HasOne("Domain.Models.JobSeeker", "SavedByNavigation")
                        .WithMany("SavedJobs")
                        .HasForeignKey("SavedBy")
                        .IsRequired()
                        .HasConstraintName("FK_SavedJobs_JobSeeker");

                    b.Navigation("JobNavigation");

                    b.Navigation("SavedByNavigation");
                });

            modelBuilder.Entity("JobSeekerProfileSkill", b =>
                {
                    b.HasOne("Domain.Models.JobSeekerProfile", null)
                        .WithMany()
                        .HasForeignKey("JobSeekerProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfileSkill_JobSeekerProfile");

                    b.HasOne("Domain.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfileSkill_Skill");
                });

            modelBuilder.Entity("Domain.Models.CompanyAdmin", b =>
                {
                    b.Navigation("HiringManagers");

                    b.Navigation("Interviews");

                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.HiringManager", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.Industry", b =>
                {
                    b.Navigation("CompanyAdmins");

                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.JobApplication", b =>
                {
                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("Domain.Models.JobCategory", b =>
                {
                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.JobPost", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("JobApplications");

                    b.Navigation("SavedJobs");
                });

            modelBuilder.Entity("Domain.Models.JobSeeker", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("JobApplications");

                    b.Navigation("JobSeekerProfiles");

                    b.Navigation("SavedJobs");
                });

            modelBuilder.Entity("Domain.Models.JobSeekerProfile", b =>
                {
                    b.Navigation("Resumes");
                });

            modelBuilder.Entity("Domain.Models.Location", b =>
                {
                    b.Navigation("CompanyAdmins");

                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.Qualification", b =>
                {
                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("Domain.Models.Resume", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("Domain.Models.Skill", b =>
                {
                    b.Navigation("JobPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
